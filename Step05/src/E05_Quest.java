import java.util.Scanner; // 사용자로부터 입력을 받기 위해 Scanner 클래스를 가져옵니다.

// 사용자로부터 숫자를 입력받아 해당 숫자만큼의 높이를 가지는
// 오른쪽 정렬된 직각삼각형 모양의 별(*)을 출력하는 클래스
public class E05_Quest {
	/*
	 * 숫자 입력 > 5		숫자 입력 > 7  <-- 사용 예시: 입력값에 따라 다른 크기의 삼각형 출력
	 *
	 *      *			      *
	 *     **			     **
	 *    ***			    ***
	 *   ****			   ****
	 *  *****		  	  *****
	 * 					 ******
	 * 					*******
	 *
	 *
	 *
	 */
	// 프로그램 실행 시작점 (main 메소드)
	public static void main(String[] args) {
		// 키보드 입력을 받기 위한 Scanner 객체 생성
		Scanner sc = new Scanner(System.in);

		// 사용자에게 숫자 입력을 요청하는 메시지 출력
		System.out.print("숫자 입력 : ");
		// 사용자가 입력한 정수를 읽어와서 ea 변수에 저장 (이 값이 삼각형의 높이가 됩니다)
		int ea = sc.nextInt();

		// 바깥쪽 for문: 삼각형의 전체 행(세로줄) 수를 제어합니다.
		// i는 0부터 사용자가 입력한 숫자(ea)보다 작을 때까지 1씩 증가합니다. (총 ea번 반복)
		for(int i = 0; i < ea; i++) {

			// 안쪽 for문 1: 각 행의 시작 부분에 출력할 공백(" ")의 개수를 제어합니다.
			// j는 0부터 (ea - i - 1)보다 작을 때까지 반복합니다.
			// 첫 번째 행(i=0)에서는 (ea-1)개의 공백, 두 번째 행(i=1)에서는 (ea-2)개의 공백, ..., 마지막 행(i=ea-1)에서는 0개의 공백을 출력합니다.
			// 이렇게 해서 별(*)이 오른쪽에 정렬되는 효과를 줍니다.
			for(int j=0; j < ea - i - 1; j++) {
				System.out.print(" "); // 공백 문자를 출력합니다. (줄바꿈 없이)
			}

			// 안쪽 for문 2: 각 행에 출력할 별(*)의 개수를 제어합니다.
			// j는 0부터 현재 행 번호(i)까지 1씩 증가합니다. (총 i+1번 반복)
			// 첫 번째 행(i=0)에서는 1개, 두 번째 행(i=1)에서는 2개, ..., 마지막 행(i=ea-1)에서는 ea개의 별을 출력합니다.
			for(int j=0; j <= i; j++) { // j < i + 1 과 동일한 조건입니다.
				System.out.print("*"); // 별(*) 문자를 출력합니다. (줄바꿈 없이)
			}

			// 해당 행의 공백과 별 출력이 모두 끝나면 다음 줄로 이동합니다.
			System.out.println();
		}

		// Scanner 사용이 끝났으므로 닫아주는 것이 좋습니다 (자원 누수 방지)
		sc.close();
	}

}